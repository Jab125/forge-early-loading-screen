plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		url = "https://maven.jab125.dev/"
	}
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven {
		url = "https://maven.minecraftforge.net"
	}
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	mods {
		m {
			sourceSet sourceSets.main
		}
		testmod {
			sourceSet sourceSets.testmod
		}
	}
	createRemapConfigurations(sourceSets.testmod)
	accessWidenerPath = file("src/main/resources/early-loading-screen.accesswidener")
}

loom {

	runs {
		testmodClient {
			client()
			ideConfigGenerated project.rootProject == project
			name = "Testmod Client"
			source sourceSets.testmod
		}
		testmodServer {
			server()
			ideConfigGenerated project.rootProject == project
			name = "Testmod Server"
			source sourceSets.testmod
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	testmodRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
//	modImplementation include("com.jab125:springboard:0.2.18"), {
//		exclude(group: "net.fabricmc.fabric-api")
//		exclude(group: "net.fabricmc")
//	}
	implementation include('net.bytebuddy:byte-buddy-agent:1.14.0')
	implementation include("net.minecraftforge:unsafe:0.9.2")
	//compileOnly "net.fabricmc:dev-launch-injector:0.2.1+build.8"

	def compatibility = [ // TODO add to Modpack-Update-Checker/meta-helper.json
//			             "curse.maven:drippy-loading-screen-fabric-515172:4590529",
//						 "curse.maven:konkrete-fabric-416797:4581979",
//						 "curse.maven:fancymenu-fabric-416796:4655934",
//						 "maven.modrinth:AANobbMI:6SSPmLc9",
//						 "com.terraformersmc:modmenu:7.1.0"
	]
	for (final def dep in compatibility) {
		modCompileOnly dep, {
			transitive false
		}
		modTestmodRuntimeOnly dep, {
			transitive false
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}


java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}